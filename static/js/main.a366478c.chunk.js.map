{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a366478c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts : [action.payload, \r\n                        ...state.contacts] \r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts\r\n                .map(contact => contact.id === action.payload.id ?\r\n                    (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n    async componentDidMount()\r\n    {\r\n       const res= await axios\r\n       .get('https://jsonplaceholder.typicode.com/users');\r\n       this.setState({contacts: res.data});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer; ","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state = { showContactInfo: false};\r\n    onShowClick = (e) =>\r\n    {\r\n        this.setState({\r\n            showContactInfo : !this.state.showContactInfo\r\n        })\r\n    }\r\n    onDeleteClick = async (id, dispatch) =>\r\n    {\r\n        try {\r\n        await axios\r\n        .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({ type:'DELETE_CONTACT' , payload: id});\r\n        } catch(e) {\r\n            dispatch({type:'DELETE_CONTACT' , payload: id});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {id,name,email,phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>Name: {name}{' '}<i onClick={this.onShowClick} className=\"fas fa-sort-down\" \r\n                        style={{cursor:'pointer'}}></i>\r\n                        <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fas fa-times\" style={{cursor:'pointer', \r\n                        float:'right', color:'red'}}></i>\r\n                        <Link to={`contact/edit/${id}`}>\r\n                            <i className = \"fas fa-pencil-alt\"\r\n                               style ={{cursor: 'pointer',float:'right',\r\n                               color:'black', marginRight:'1rem'}}></i>\r\n                        </Link>\r\n                        </h4>\r\n                     \r\n                        {showContactInfo ? (<ul className=\"list-group\">\r\n                            <li className = \"list-group-item\">\r\n                                Phone: {phone}\r\n                            </li>\r\n                            <li className = \"list-group-item\">\r\n                                Email: {email}  \r\n                            </li>\r\n                        </ul>):null}\r\n                       \r\n                    </div>\r\n\r\n                    )\r\n                }\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact : PropTypes.object.isRequired,\r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context' ;\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n\r\n                            </h1>\r\n                        {contacts.map(contact => (\r\n                            <Contact \r\n                                   key   = {contact.id}\r\n                                   contact = {contact}\r\n                                   \r\n                                    />\r\n                        ))}\r\n                    </React.Fragment>\r\n\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error \r\n}) => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                 <label htmlFor = {name}>{label}</label>\r\n                 <input \r\n                    type ={type}\r\n                    name={name}\r\n                    className={classnames('form-control form-control-lg', {\r\n                        'is-invalid':error\r\n                    })}\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    onChange = {onChange}\r\n                />\r\n                {error && <div className = \"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        );\r\n};\r\nTextInputGroup.propTypes = {\r\n    label        : PropTypes.string.isRequired,\r\n    name         : PropTypes.string.isRequired,\r\n    placeholder  : PropTypes.string.isRequired,\r\n    value        : PropTypes.string.isRequired,\r\n    type         : PropTypes.string.isRequired,\r\n    onChange     : PropTypes.func.isRequired,\r\n    error        : PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name : '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n           [e.target.name] : e.target.value\r\n        });\r\n    }\r\n    onSubmit = (dispatch, e) =>\r\n    {\r\n      e.preventDefault();\r\n      const {name,email,phone} = this.state;\r\n      if(name === '')\r\n      {\r\n        this.setState({errors:{name: 'Name is Required'}})\r\n        return;\r\n      }\r\n      if(email === '')\r\n      {\r\n        this.setState({errors:{email: 'Email is Required'}})\r\n        return;\r\n      }\r\n      if(phone === '')\r\n      {\r\n        this.setState({errors:{phone: 'Email is Required'}})\r\n        return;\r\n      }\r\n      const newContact = {\r\n          name,\r\n          email,\r\n          phone\r\n      }\r\n      const res =axios\r\n      .post('https://jsonplaceholder.typicode.com/users',newContact)\r\n      dispatch({ type:'ADD_CONTACT',payload:res.data})\r\n\r\n    \r\n      \r\n      //clear state\r\n      this.setState({\r\n          name  : '',\r\n          email : '',\r\n          phone : '',\r\n          errors: {}\r\n      })\r\n      this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;        \r\n        return (\r\n            <Consumer>\r\n            {value => {\r\n                const {dispatch} = value;\r\n                return(\r\n                    <div className = \"card mb-3\">\r\n                        <div className = \"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit = {this.onSubmit.bind(this, dispatch)}>\r\n                                 <TextInputGroup\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder = \"Enter Your Name\"\r\n                                    value ={name}\r\n                                    onChange={this.onChange}\r\n                                    error = {errors.name}\r\n                                 />\r\n                                 <TextInputGroup\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder = \"Enter Your Email\"\r\n                                    value ={email}\r\n                                    onChange={this.onChange}\r\n                                    error = {errors.email}\r\n                                 />\r\n                                 <TextInputGroup\r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder = \"Enter Your Phone Number\"\r\n                                    value ={phone}\r\n                                    onChange={this.onChange}\r\n                                    error = {errors.phone}\r\n                                 />\r\n                                 \r\n                                \r\n                                <input \r\n                                     type =\"submit\" \r\n                                     value=\"Add Contact\"\r\n                                     className=\"btn btn-block\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name : '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    async componentDidMount()\r\n    {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email : contact.email,\r\n            phone : contact.phone\r\n        })\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n           [e.target.name] : e.target.value\r\n        });\r\n    }\r\n    onSubmit = async (dispatch, e) =>\r\n    {\r\n      e.preventDefault();\r\n      const {name,email,phone} = this.state;\r\n      if(name === '')\r\n      {\r\n        this.setState({errors:{name: 'Name is Required'}})\r\n        return;\r\n      }\r\n      if(email === '')\r\n      {\r\n        this.setState({errors:{email: 'Email is Required'}})\r\n        return;\r\n      }\r\n      if(phone === '')\r\n      {\r\n        this.setState({errors:{phone: 'Email is Required'}})\r\n        return;\r\n      }\r\n      const updContact = {\r\n          name,\r\n          email,\r\n          phone\r\n      }\r\n      const { id } = this.props.match.params;\r\n      const res = await axios\r\n      .put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n      dispatch({type: 'UPDATE_CONTACT', payload:res.data})\r\n      \r\n      //clear state\r\n      this.setState({\r\n          name  : '',\r\n          email : '',\r\n          phone : '',\r\n          errors: {}\r\n      })\r\n      this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;        \r\n        return (\r\n            <Consumer>\r\n            {value => {\r\n                const {dispatch} = value;\r\n                return(\r\n                    <div className = \"card mb-3\">\r\n                        <div className = \"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit = {this.onSubmit.bind(this, dispatch)}>\r\n                                 <TextInputGroup\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder = \"Enter Your Name\"\r\n                                    value ={name}\r\n                                    onChange={this.onChange}\r\n                                    error = {errors.name}\r\n                                 />\r\n                                 <TextInputGroup\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder = \"Enter Your Email\"\r\n                                    value ={email}\r\n                                    onChange={this.onChange}\r\n                                    error = {errors.email}\r\n                                 />\r\n                                 <TextInputGroup\r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder = \"Enter Your Phone Number\"\r\n                                    value ={phone}\r\n                                    onChange={this.onChange}\r\n                                    error = {errors.phone}\r\n                                 />\r\n                                 \r\n                                \r\n                                <input \r\n                                     type =\"submit\" \r\n                                     value=\"Update Contact\"\r\n                                     className=\"btn btn-block\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link}  from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n   const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm \r\n        navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                           <i className=\"fas fa-home\"></i> Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"></i>Add\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\"></i>About\r\n                        </Link>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        </nav> \r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding : 'My App'\r\n}\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\nexport default Header;\r\n\r\n\r\n//nav className =\"navbar.navbar-expand-sm.navbar-dark.bg-danger.mb-3.py-0\" >\r\n         //   <div className = \"container\">\r\n           // <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n            //<div>\r\n               // <ul className=\"navbar-nav mr-auto\">\r\n                 //   <li className=\"nav-item\">\r\n                   //     <a href=\"/\" className=\"nav-link\">\r\n                     //       Home\r\n                       // </a>\r\n                    //</li>\r\n                //</ul>\r\n            //</div>\r\n            //</div>\r\n        //</nav>","import React from 'react'\r\n\r\nconst About = props => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>    \r\n            <p className=\"lead\">Simple app to Manage</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">404 Page Not Found</h1>\r\n            <p className =\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\nexport default NotFound;\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component \r\n{\r\n    state = {\r\n        title : '',\r\n        body  : ''\r\n    }\r\n   componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n    .then(response => response.json())\r\n    .then(data => this.setState({\r\n        title: data.title,\r\n        body:data.body\r\n    }))\r\n     }\r\n   // componentWillMount()\r\n    //{\r\n    //    console.log('componentWillMount...');\r\n    //}\r\n    //componentDidUpdate()\r\n    //{\r\n    //    console.log('componentDidUpdate..');\r\n   // }\r\n    //componentWillReceiveProps(nextProps, nextState)\r\n   // {\r\n     //   console.log('componentWillReceiveProps..');\r\n   // }\r\n    //static getDerivedStateFromProps(nextProps, prevState)\r\n   // {\r\n    //  return (\r\n     //     state : 'Thilak'\r\n      //)\r\n   // }\r\n    //getSnapshotBeforeUpdate(prevProps, prevState)\r\n   // {\r\n    //    console.log('getSnapshotBeforeUpdate.');\r\n    //}\r\n    render() \r\n    {\r\n        const { title , body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n//import Contact from './components/Contact';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/Test/Test';\n\nimport { Provider } from './context'; \n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nclass App extends Component{\n  render()\n  {\n    return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n      <Header \n            branding=\"Contact Manager\" />\n      <div className=\"container\">\n        <Switch>\n           <Route exact path=\"/\" component={Contacts} />\n           <Route exact path=\"/contact/add\" component={AddContact} />\n           <Route exact path=\"/contact/edit/:id\" component={EditContact} />      \n           <Route exact path=\"/about\" component={About} />\n           <Route exact path=\"/test\" component={Test} />\n           <Route component={NotFound}/>    \n        </Switch>\n      </div>\n    </div>\n    </Router>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}